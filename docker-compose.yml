version: "3.8"

services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: "${APP_NAME}_app"
    restart: unless-stopped
    tty: true
    environment:
      TIMEZONE: "Europe/Paris"
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: "${APP_NAME}_webserver"
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
      - "9001:9001"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.29
    container_name: "${APP_NAME}_db"
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #Adminer, database management tools
  adminer:
    container_name: "${APP_NAME}_adminer"
    image: adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    networks:
      - app-network

  #Cache + Session
  redis:
    container_name: "${APP_NAME}_redis"
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - redis:/data
    networks:
      - app-network

  # SMTP mailer
  mailhog:
    container_name: "${APP_NAME}_mailhog"
    image: mailhog/mailhog
    restart: unless-stopped
    ports:
      - "8025:8025"
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
  redis:
    driver: local
